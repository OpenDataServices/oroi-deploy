version: "3.5"

services:
  declaration_nav-load:
    image: opendataservices/open-register-of-interests:docker
    working_dir: /code/oroi/
    # This runs all tables automatically:
    # command: "sh -c 'python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore'"
    #
    # Instead, in the below, each table is run explicitly. The main purpose of
    # this is to control the order, such that the largest datasets are last, so
    # you get greatest diversity of results as quickly as possible:
    command: "sh -c '
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore ukparl_ministers ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore nsomerset_register ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore southglos_register ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore bristol_meetings ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore bristol_register ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore gla_register ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore ukparl_groups ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore gla_gifts ;
      python manage.py load_scrape_data postgresql://datastore:datastore@memorious-postgres/datastore ukparl_twfy'"
    environment:
      DATABASE_URL: postgresql://django_db:django_db@django-postgres/django_db
      ALLOWED_HOSTS: '.docker.opendataservices.uk0.bigv.io,localhost'
      DEBUG: 'False'
      ES_HOST: "elasticsearch:9200"
    tmpfs:
      - "/tmp"
    deploy:
      restart_policy:
        condition: none
